// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gnoindexerql

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// GetGovDAOExecutedProposalsGetTransactionsTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Defines a transaction within a block, detailing its execution specifics and content.
type GetGovDAOExecutedProposalsGetTransactionsTransaction struct {
	// A sequential index representing the order of this Transaction within its Block. Unique within the context of its Block.
	Index int `json:"index"`
	// Hash from Transaction content in base64 encoding.
	Hash string `json:"hash"`
	// The success can determine whether the transaction succeeded or failed.
	Success bool `json:"success"`
	// The height of the Block in which this Transaction is included. Links the Transaction to its containing Block.
	Block_height int `json:"block_height"`
	// The declared amount of computational effort the sender is willing to pay for executing this Transaction.
	Gas_wanted int `json:"gas_wanted"`
	// The actual amount of computational effort consumed to execute this Transaction. It could be less or equal to `gas_wanted`.
	Gas_used int `json:"gas_used"`
	// The payload of the Transaction in a raw format, typically containing the
	// instructions and any data necessary for execution.
	Content_raw string `json:"content_raw"`
	// `memo` are string information stored within a transaction.
	// `memo` can be utilized to find or distinguish transactions.
	// For example, when trading a specific exchange, you would utilize the memo field of the transaction.
	Memo string `json:"memo"`
	// The payload of a message shows the contents of the messages in a transaction.
	// A message consists of `router`, `type`, and `value` (whose form depends on the `router` and `type`).
	Messages []GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage `json:"messages"`
}

// GetIndex returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Index, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetIndex() int { return v.Index }

// GetHash returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Hash, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetHash() string { return v.Hash }

// GetSuccess returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Success, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetSuccess() bool { return v.Success }

// GetBlock_height returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Block_height, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetBlock_height() int {
	return v.Block_height
}

// GetGas_wanted returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Gas_wanted, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetGas_wanted() int {
	return v.Gas_wanted
}

// GetGas_used returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Gas_used, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetGas_used() int { return v.Gas_used }

// GetContent_raw returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Content_raw, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetContent_raw() string {
	return v.Content_raw
}

// GetMemo returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Memo, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetMemo() string { return v.Memo }

// GetMessages returns GetGovDAOExecutedProposalsGetTransactionsTransaction.Messages, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransaction) GetMessages() []GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage {
	return v.Messages
}

// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage includes the requested fields of the GraphQL type TransactionMessage.
type GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage struct {
	// The type of transaction message.
	// The value of `typeUrl` can be `send`, `exec`, `add_package`, `run`.
	TypeUrl string `json:"typeUrl"`
	// The route of transaction message.
	// The value of `route` can be `bank`, `vm`.
	Route string `json:"route"`
	// MessageValue is the content of the transaction.
	// `value` can be of type `BankMsgSend`, `MsgCall`, `MsgAddPackage`, `MsgRun`, `UnexpectedMessage`.
	Value GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue `json:"-"`
}

// GetTypeUrl returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage.TypeUrl, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage) GetTypeUrl() string {
	return v.TypeUrl
}

// GetRoute returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage.Route, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage) GetRoute() string {
	return v.Route
}

// GetValue returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage.Value, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage) GetValue() GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue {
	return v.Value
}

func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage
		Value json.RawMessage `json:"value"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Value
		src := firstPass.Value
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage struct {
	TypeUrl string `json:"typeUrl"`

	Route string `json:"route"`

	Value json.RawMessage `json:"value"`
}

func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage) __premarshalJSON() (*__premarshalGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage, error) {
	var retval __premarshalGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage

	retval.TypeUrl = v.TypeUrl
	retval.Route = v.Route
	{

		dst := &retval.Value
		src := v.Value
		var err error
		*dst, err = __marshalGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
		}
	}
	return &retval, nil
}

// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue includes the requested fields of the GraphQL interface MessageValue.
//
// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue is implemented by the following types:
// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall
// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun
// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
type GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue interface {
	implementsGraphQLInterfaceGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) implementsGraphQLInterfaceGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) implementsGraphQLInterfaceGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) implementsGraphQLInterfaceGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) implementsGraphQLInterfaceGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) implementsGraphQLInterfaceGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}

func __unmarshalGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue(b []byte, v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BankMsgSend":
		*v = new(GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend)
		return json.Unmarshal(b, *v)
	case "MsgAddPackage":
		*v = new(GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage)
		return json.Unmarshal(b, *v)
	case "MsgCall":
		*v = new(GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall)
		return json.Unmarshal(b, *v)
	case "MsgRun":
		*v = new(GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun)
		return json.Unmarshal(b, *v)
	case "UnexpectedMessage":
		*v = new(GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MessageValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue: "%v"`, tn.TypeName)
	}
}

func __marshalGetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue(v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend:
		typename = "BankMsgSend"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage:
		typename = "MsgAddPackage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall:
		typename = "MsgCall"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun:
		typename = "MsgRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage:
		typename = "UnexpectedMessage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValue: "%T"`, v)
	}
}

// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend includes the requested fields of the GraphQL type BankMsgSend.
// The GraphQL type's documentation follows.
//
// `BankMsgSend` is a message with a message router of `bank` and a message type of `send`.
// `BankMsgSend` is the fund transfer tx message.
type GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) GetTypename() string {
	return v.Typename
}

// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage includes the requested fields of the GraphQL type MsgAddPackage.
// The GraphQL type's documentation follows.
//
// `MsgAddPackage` is a message with a message router of `vm` and a message type of `add_package`.
// `MsgAddPackage` is the package deployment tx message.
type GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetTypename() string {
	return v.Typename
}

// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall includes the requested fields of the GraphQL type MsgCall.
// The GraphQL type's documentation follows.
//
// `MsgCall` is a message with a message router of `vm` and a message type of `exec`.
// `MsgCall` is the method invocation tx message.
type GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall struct {
	Typename string `json:"__typename"`
	// the bech32 address of the function caller.
	// ex) `g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5`
	Caller string `json:"caller"`
	// the gno package path.
	Pkg_path string `json:"pkg_path"`
	// `args` are the arguments passed to the executed function.
	Args []string `json:"args"`
}

// GetTypename returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetTypename() string {
	return v.Typename
}

// GetCaller returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Caller, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetCaller() string {
	return v.Caller
}

// GetPkg_path returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Pkg_path, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetPkg_path() string {
	return v.Pkg_path
}

// GetArgs returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Args, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetArgs() []string {
	return v.Args
}

// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun includes the requested fields of the GraphQL type MsgRun.
// The GraphQL type's documentation follows.
//
// `MsgRun` is a message with a message router of `vm` and a message type of `run`.
// `MsgRun is the execute arbitrary Gno code tx message`.
type GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetTypename() string {
	return v.Typename
}

// GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage includes the requested fields of the GraphQL type UnexpectedMessage.
// The GraphQL type's documentation follows.
//
// `UnexpectedMessage` is an Undefined Message, which is a message that decoding failed.
type GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) GetTypename() string {
	return v.Typename
}

// GetGovDAOExecutedProposalsResponse is returned by GetGovDAOExecutedProposals on success.
type GetGovDAOExecutedProposalsResponse struct {
	// Retrieves a list of Transactions that match the given
	// where criteria. If the result is incomplete due to errors, both partial
	// results and errors are returned.
	GetTransactions []GetGovDAOExecutedProposalsGetTransactionsTransaction `json:"getTransactions"`
}

// GetGetTransactions returns GetGovDAOExecutedProposalsResponse.GetTransactions, and is useful for accessing the field via an interface.
func (v *GetGovDAOExecutedProposalsResponse) GetGetTransactions() []GetGovDAOExecutedProposalsGetTransactionsTransaction {
	return v.GetTransactions
}

// GetGovDAOProposalsGetTransactionsTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Defines a transaction within a block, detailing its execution specifics and content.
type GetGovDAOProposalsGetTransactionsTransaction struct {
	// The height of the Block in which this Transaction is included. Links the Transaction to its containing Block.
	Block_height int `json:"block_height"`
	// A sequential index representing the order of this Transaction within its Block. Unique within the context of its Block.
	Index int `json:"index"`
	// `response` is the processing result of the transaction.
	// It has `log`, `info`, `error`, and `data`.
	Response GetGovDAOProposalsGetTransactionsTransactionResponse `json:"response"`
	// The payload of a message shows the contents of the messages in a transaction.
	// A message consists of `router`, `type`, and `value` (whose form depends on the `router` and `type`).
	Messages []GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage `json:"messages"`
}

// GetBlock_height returns GetGovDAOProposalsGetTransactionsTransaction.Block_height, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransaction) GetBlock_height() int { return v.Block_height }

// GetIndex returns GetGovDAOProposalsGetTransactionsTransaction.Index, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransaction) GetIndex() int { return v.Index }

// GetResponse returns GetGovDAOProposalsGetTransactionsTransaction.Response, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransaction) GetResponse() GetGovDAOProposalsGetTransactionsTransactionResponse {
	return v.Response
}

// GetMessages returns GetGovDAOProposalsGetTransactionsTransaction.Messages, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransaction) GetMessages() []GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage {
	return v.Messages
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage includes the requested fields of the GraphQL type TransactionMessage.
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage struct {
	// The type of transaction message.
	// The value of `typeUrl` can be `send`, `exec`, `add_package`, `run`.
	TypeUrl string `json:"typeUrl"`
	// The route of transaction message.
	// The value of `route` can be `bank`, `vm`.
	Route string `json:"route"`
	// MessageValue is the content of the transaction.
	// `value` can be of type `BankMsgSend`, `MsgCall`, `MsgAddPackage`, `MsgRun`, `UnexpectedMessage`.
	Value GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue `json:"-"`
}

// GetTypeUrl returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage.TypeUrl, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage) GetTypeUrl() string {
	return v.TypeUrl
}

// GetRoute returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage.Route, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage) GetRoute() string {
	return v.Route
}

// GetValue returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage.Value, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage) GetValue() GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue {
	return v.Value
}

func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage
		Value json.RawMessage `json:"value"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Value
		src := firstPass.Value
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage struct {
	TypeUrl string `json:"typeUrl"`

	Route string `json:"route"`

	Value json.RawMessage `json:"value"`
}

func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage) __premarshalJSON() (*__premarshalGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage, error) {
	var retval __premarshalGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage

	retval.TypeUrl = v.TypeUrl
	retval.Route = v.Route
	{

		dst := &retval.Value
		src := v.Value
		var err error
		*dst, err = __marshalGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
		}
	}
	return &retval, nil
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue includes the requested fields of the GraphQL interface MessageValue.
//
// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue is implemented by the following types:
// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall
// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun
// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue interface {
	implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue() {
}

func __unmarshalGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue(b []byte, v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BankMsgSend":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend)
		return json.Unmarshal(b, *v)
	case "MsgAddPackage":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage)
		return json.Unmarshal(b, *v)
	case "MsgCall":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall)
		return json.Unmarshal(b, *v)
	case "MsgRun":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun)
		return json.Unmarshal(b, *v)
	case "UnexpectedMessage":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MessageValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue: "%v"`, tn.TypeName)
	}
}

func __marshalGetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue(v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend:
		typename = "BankMsgSend"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage:
		typename = "MsgAddPackage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall:
		typename = "MsgCall"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun:
		typename = "MsgRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage:
		typename = "UnexpectedMessage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValue: "%T"`, v)
	}
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend includes the requested fields of the GraphQL type BankMsgSend.
// The GraphQL type's documentation follows.
//
// `BankMsgSend` is a message with a message router of `bank` and a message type of `send`.
// `BankMsgSend` is the fund transfer tx message.
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage includes the requested fields of the GraphQL type MsgAddPackage.
// The GraphQL type's documentation follows.
//
// `MsgAddPackage` is a message with a message router of `vm` and a message type of `add_package`.
// `MsgAddPackage` is the package deployment tx message.
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall includes the requested fields of the GraphQL type MsgCall.
// The GraphQL type's documentation follows.
//
// `MsgCall` is a message with a message router of `vm` and a message type of `exec`.
// `MsgCall` is the method invocation tx message.
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun includes the requested fields of the GraphQL type MsgRun.
// The GraphQL type's documentation follows.
//
// `MsgRun` is a message with a message router of `vm` and a message type of `run`.
// `MsgRun is the execute arbitrary Gno code tx message`.
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun struct {
	Typename string `json:"__typename"`
	// the bech32 address of the function caller.
	// ex) `g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5`
	Caller string `json:"caller"`
	// the amount of funds to be deposited to the package, if any ("<amount><denomination>").
	// ex) `1000000ugnot`
	Send string `json:"send"`
	// the package being executed.
	Package GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage `json:"package"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetTypename() string {
	return v.Typename
}

// GetCaller returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun.Caller, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetCaller() string {
	return v.Caller
}

// GetSend returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun.Send, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetSend() string {
	return v.Send
}

// GetPackage returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun.Package, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetPackage() GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage {
	return v.Package
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage includes the requested fields of the GraphQL type MemPackage.
// The GraphQL type's documentation follows.
//
// `MemPackage` is the metadata information tied to package / realm deployment.
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage struct {
	// the gno path of the package.
	Path string `json:"path"`
	// the associated package gno source.
	Files []GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile `json:"files"`
	// the name of the package.
	Name string `json:"name"`
}

// GetPath returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage.Path, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage) GetPath() string {
	return v.Path
}

// GetFiles returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage.Files, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage) GetFiles() []GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile {
	return v.Files
}

// GetName returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage.Name, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackage) GetName() string {
	return v.Name
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile includes the requested fields of the GraphQL type MemFile.
// The GraphQL type's documentation follows.
//
// `MemFile` is the metadata information tied to a single gno package / realm file
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile struct {
	// the name of the source file.
	Name string `json:"name"`
	// the content of the source file.
	Body string `json:"body"`
}

// GetName returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile.Name, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile) GetName() string {
	return v.Name
}

// GetBody returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile.Body, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueMsgRunPackageMemPackageFilesMemFile) GetBody() string {
	return v.Body
}

// GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage includes the requested fields of the GraphQL type UnexpectedMessage.
// The GraphQL type's documentation follows.
//
// `UnexpectedMessage` is an Undefined Message, which is a message that decoding failed.
type GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsGetTransactionsTransactionResponse includes the requested fields of the GraphQL type TransactionResponse.
// The GraphQL type's documentation follows.
//
// `TransactionResponse` is the processing result of the transaction.
// It has `log`, `info`, `error`, and `data`.
type GetGovDAOProposalsGetTransactionsTransactionResponse struct {
	// The emitted events associated with the transaction execution, if any.
	Events []GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent `json:"-"`
	// The response data associated with the Transaction execution, if any.
	Data string `json:"data"`
}

// GetEvents returns GetGovDAOProposalsGetTransactionsTransactionResponse.Events, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponse) GetEvents() []GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent {
	return v.Events
}

// GetData returns GetGovDAOProposalsGetTransactionsTransactionResponse.Data, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponse) GetData() string { return v.Data }

func (v *GetGovDAOProposalsGetTransactionsTransactionResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetGovDAOProposalsGetTransactionsTransactionResponse
		Events []json.RawMessage `json:"events"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetGovDAOProposalsGetTransactionsTransactionResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Events
		src := firstPass.Events
		*dst = make(
			[]GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"unable to unmarshal GetGovDAOProposalsGetTransactionsTransactionResponse.Events: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalGetGovDAOProposalsGetTransactionsTransactionResponse struct {
	Events []json.RawMessage `json:"events"`

	Data string `json:"data"`
}

func (v *GetGovDAOProposalsGetTransactionsTransactionResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetGovDAOProposalsGetTransactionsTransactionResponse) __premarshalJSON() (*__premarshalGetGovDAOProposalsGetTransactionsTransactionResponse, error) {
	var retval __premarshalGetGovDAOProposalsGetTransactionsTransactionResponse

	{

		dst := &retval.Events
		src := v.Events
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal GetGovDAOProposalsGetTransactionsTransactionResponse.Events: %w", err)
			}
		}
	}
	retval.Data = v.Data
	return &retval, nil
}

// GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent includes the requested fields of the GraphQL interface Event.
//
// GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent is implemented by the following types:
// GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent
// GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent
// GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent
// GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent
type GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent interface {
	implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent() {
}
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent() {
}
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent() {
}
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent) implementsGraphQLInterfaceGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent() {
}

func __unmarshalGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent(b []byte, v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "GnoEvent":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent)
		return json.Unmarshal(b, *v)
	case "StorageDepositEvent":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent)
		return json.Unmarshal(b, *v)
	case "StorageUnlockEvent":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent)
		return json.Unmarshal(b, *v)
	case "UnknownEvent":
		*v = new(GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Event.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent: "%v"`, tn.TypeName)
	}
}

func __marshalGetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent(v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent:
		typename = "GnoEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent:
		typename = "StorageDepositEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent:
		typename = "StorageUnlockEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent:
		typename = "UnknownEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetGovDAOProposalsGetTransactionsTransactionResponseEventsEvent: "%T"`, v)
	}
}

// GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent includes the requested fields of the GraphQL type GnoEvent.
// The GraphQL type's documentation follows.
//
// `GnoEvent` is the event information exported by the Gno VM.
// It has `type`, `pkg_path`, `func`, and `attrs`.
type GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent struct {
	Typename string `json:"__typename"`
	// `type` is the type of transaction event emitted.
	Type string `json:"type"`
	// `attrs` is the event's attribute information.
	Attrs []GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute `json:"attrs"`
	// `pkg_path` is the path to the package that emitted the event.
	Pkg_path string `json:"pkg_path"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent) GetTypename() string {
	return v.Typename
}

// GetType returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent.Type, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent) GetType() string {
	return v.Type
}

// GetAttrs returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent.Attrs, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent) GetAttrs() []GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute {
	return v.Attrs
}

// GetPkg_path returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent.Pkg_path, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEvent) GetPkg_path() string {
	return v.Pkg_path
}

// GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute includes the requested fields of the GraphQL type GnoEventAttribute.
// The GraphQL type's documentation follows.
//
// `GnoEventAttribute` is the attributes that the event has.
// It has `key` and `value`.
type GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute struct {
	// The key of the event attribute.
	Key string `json:"key"`
	// The value of the event attribute.
	Value string `json:"value"`
}

// GetKey returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute.Key, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute) GetKey() string {
	return v.Key
}

// GetValue returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute.Value, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsGnoEventAttrsGnoEventAttribute) GetValue() string {
	return v.Value
}

// GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent includes the requested fields of the GraphQL type StorageDepositEvent.
// The GraphQL type's documentation follows.
//
// `StorageDepositEvent` is emitted when a storage deposit fee is locked.
// It has `type`, `bytes_delta`, `fee_delta`, and `pkg_path`.
type GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageDepositEvent) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent includes the requested fields of the GraphQL type StorageUnlockEvent.
// The GraphQL type's documentation follows.
//
// `StorageUnlockEvent` is emitted when a storage deposit fee is unlocked.
// It has `type`, `bytes_delta`, `fee_refund`, and `pkg_path`.
type GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsStorageUnlockEvent) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent includes the requested fields of the GraphQL type UnknownEvent.
// The GraphQL type's documentation follows.
//
// `UnknownEvent` is an unknown event type.
// It has `value`.
type GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsGetTransactionsTransactionResponseEventsUnknownEvent) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsResponse is returned by GetGovDAOProposals on success.
type GetGovDAOProposalsResponse struct {
	// Retrieves a list of Transactions that match the given
	// where criteria. If the result is incomplete due to errors, both partial
	// results and errors are returned.
	GetTransactions []GetGovDAOProposalsGetTransactionsTransaction `json:"getTransactions"`
}

// GetGetTransactions returns GetGovDAOProposalsResponse.GetTransactions, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsResponse) GetGetTransactions() []GetGovDAOProposalsGetTransactionsTransaction {
	return v.GetTransactions
}

// GetGovDAOProposalsVotesGetTransactionsTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Defines a transaction within a block, detailing its execution specifics and content.
type GetGovDAOProposalsVotesGetTransactionsTransaction struct {
	// A sequential index representing the order of this Transaction within its Block. Unique within the context of its Block.
	Index int `json:"index"`
	// Hash from Transaction content in base64 encoding.
	Hash string `json:"hash"`
	// The success can determine whether the transaction succeeded or failed.
	Success bool `json:"success"`
	// The height of the Block in which this Transaction is included. Links the Transaction to its containing Block.
	Block_height int `json:"block_height"`
	// The declared amount of computational effort the sender is willing to pay for executing this Transaction.
	Gas_wanted int `json:"gas_wanted"`
	// The actual amount of computational effort consumed to execute this Transaction. It could be less or equal to `gas_wanted`.
	Gas_used int `json:"gas_used"`
	// The payload of the Transaction in a raw format, typically containing the
	// instructions and any data necessary for execution.
	Content_raw string `json:"content_raw"`
	// `memo` are string information stored within a transaction.
	// `memo` can be utilized to find or distinguish transactions.
	// For example, when trading a specific exchange, you would utilize the memo field of the transaction.
	Memo string `json:"memo"`
	// The payload of a message shows the contents of the messages in a transaction.
	// A message consists of `router`, `type`, and `value` (whose form depends on the `router` and `type`).
	Messages []GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage `json:"messages"`
}

// GetIndex returns GetGovDAOProposalsVotesGetTransactionsTransaction.Index, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetIndex() int { return v.Index }

// GetHash returns GetGovDAOProposalsVotesGetTransactionsTransaction.Hash, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetHash() string { return v.Hash }

// GetSuccess returns GetGovDAOProposalsVotesGetTransactionsTransaction.Success, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetSuccess() bool { return v.Success }

// GetBlock_height returns GetGovDAOProposalsVotesGetTransactionsTransaction.Block_height, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetBlock_height() int {
	return v.Block_height
}

// GetGas_wanted returns GetGovDAOProposalsVotesGetTransactionsTransaction.Gas_wanted, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetGas_wanted() int { return v.Gas_wanted }

// GetGas_used returns GetGovDAOProposalsVotesGetTransactionsTransaction.Gas_used, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetGas_used() int { return v.Gas_used }

// GetContent_raw returns GetGovDAOProposalsVotesGetTransactionsTransaction.Content_raw, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetContent_raw() string {
	return v.Content_raw
}

// GetMemo returns GetGovDAOProposalsVotesGetTransactionsTransaction.Memo, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetMemo() string { return v.Memo }

// GetMessages returns GetGovDAOProposalsVotesGetTransactionsTransaction.Messages, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransaction) GetMessages() []GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage {
	return v.Messages
}

// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage includes the requested fields of the GraphQL type TransactionMessage.
type GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage struct {
	// The type of transaction message.
	// The value of `typeUrl` can be `send`, `exec`, `add_package`, `run`.
	TypeUrl string `json:"typeUrl"`
	// The route of transaction message.
	// The value of `route` can be `bank`, `vm`.
	Route string `json:"route"`
	// MessageValue is the content of the transaction.
	// `value` can be of type `BankMsgSend`, `MsgCall`, `MsgAddPackage`, `MsgRun`, `UnexpectedMessage`.
	Value GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue `json:"-"`
}

// GetTypeUrl returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage.TypeUrl, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage) GetTypeUrl() string {
	return v.TypeUrl
}

// GetRoute returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage.Route, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage) GetRoute() string {
	return v.Route
}

// GetValue returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage.Value, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage) GetValue() GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue {
	return v.Value
}

func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage
		Value json.RawMessage `json:"value"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Value
		src := firstPass.Value
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage struct {
	TypeUrl string `json:"typeUrl"`

	Route string `json:"route"`

	Value json.RawMessage `json:"value"`
}

func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage) __premarshalJSON() (*__premarshalGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage, error) {
	var retval __premarshalGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage

	retval.TypeUrl = v.TypeUrl
	retval.Route = v.Route
	{

		dst := &retval.Value
		src := v.Value
		var err error
		*dst, err = __marshalGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
		}
	}
	return &retval, nil
}

// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue includes the requested fields of the GraphQL interface MessageValue.
//
// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue is implemented by the following types:
// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall
// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun
// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
type GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue interface {
	implementsGraphQLInterfaceGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) implementsGraphQLInterfaceGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) implementsGraphQLInterfaceGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) implementsGraphQLInterfaceGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) implementsGraphQLInterfaceGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) implementsGraphQLInterfaceGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue() {
}

func __unmarshalGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue(b []byte, v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BankMsgSend":
		*v = new(GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend)
		return json.Unmarshal(b, *v)
	case "MsgAddPackage":
		*v = new(GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage)
		return json.Unmarshal(b, *v)
	case "MsgCall":
		*v = new(GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall)
		return json.Unmarshal(b, *v)
	case "MsgRun":
		*v = new(GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun)
		return json.Unmarshal(b, *v)
	case "UnexpectedMessage":
		*v = new(GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MessageValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue: "%v"`, tn.TypeName)
	}
}

func __marshalGetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue(v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend:
		typename = "BankMsgSend"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage:
		typename = "MsgAddPackage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall:
		typename = "MsgCall"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun:
		typename = "MsgRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun
		}{typename, v}
		return json.Marshal(result)
	case *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage:
		typename = "UnexpectedMessage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValue: "%T"`, v)
	}
}

// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend includes the requested fields of the GraphQL type BankMsgSend.
// The GraphQL type's documentation follows.
//
// `BankMsgSend` is a message with a message router of `bank` and a message type of `send`.
// `BankMsgSend` is the fund transfer tx message.
type GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage includes the requested fields of the GraphQL type MsgAddPackage.
// The GraphQL type's documentation follows.
//
// `MsgAddPackage` is a message with a message router of `vm` and a message type of `add_package`.
// `MsgAddPackage` is the package deployment tx message.
type GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall includes the requested fields of the GraphQL type MsgCall.
// The GraphQL type's documentation follows.
//
// `MsgCall` is a message with a message router of `vm` and a message type of `exec`.
// `MsgCall` is the method invocation tx message.
type GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall struct {
	Typename string `json:"__typename"`
	// the bech32 address of the function caller.
	// ex) `g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5`
	Caller string `json:"caller"`
	// the gno package path.
	Pkg_path string `json:"pkg_path"`
	// `args` are the arguments passed to the executed function.
	Args []string `json:"args"`
}

// GetTypename returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetTypename() string {
	return v.Typename
}

// GetCaller returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Caller, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetCaller() string {
	return v.Caller
}

// GetPkg_path returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Pkg_path, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetPkg_path() string {
	return v.Pkg_path
}

// GetArgs returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall.Args, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetArgs() []string {
	return v.Args
}

// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun includes the requested fields of the GraphQL type MsgRun.
// The GraphQL type's documentation follows.
//
// `MsgRun` is a message with a message router of `vm` and a message type of `run`.
// `MsgRun is the execute arbitrary Gno code tx message`.
type GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage includes the requested fields of the GraphQL type UnexpectedMessage.
// The GraphQL type's documentation follows.
//
// `UnexpectedMessage` is an Undefined Message, which is a message that decoding failed.
type GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage.Typename, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesGetTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) GetTypename() string {
	return v.Typename
}

// GetGovDAOProposalsVotesResponse is returned by GetGovDAOProposalsVotes on success.
type GetGovDAOProposalsVotesResponse struct {
	// Retrieves a list of Transactions that match the given
	// where criteria. If the result is incomplete due to errors, both partial
	// results and errors are returned.
	GetTransactions []GetGovDAOProposalsVotesGetTransactionsTransaction `json:"getTransactions"`
}

// GetGetTransactions returns GetGovDAOProposalsVotesResponse.GetTransactions, and is useful for accessing the field via an interface.
func (v *GetGovDAOProposalsVotesResponse) GetGetTransactions() []GetGovDAOProposalsVotesGetTransactionsTransaction {
	return v.GetTransactions
}

// GetPublishedPackagesResponse is returned by GetPublishedPackages on success.
type GetPublishedPackagesResponse struct {
	// Retrieves a list of Transactions that match the given filter criteria. If the
	// result is incomplete due to errors, both partial results and errors are returned.
	Transactions []GetPublishedPackagesTransactionsTransaction `json:"transactions"`
}

// GetTransactions returns GetPublishedPackagesResponse.Transactions, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesResponse) GetTransactions() []GetPublishedPackagesTransactionsTransaction {
	return v.Transactions
}

// GetPublishedPackagesTransactionsTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Defines a transaction within a block, detailing its execution specifics and content.
type GetPublishedPackagesTransactionsTransaction struct {
	// Hash from Transaction content in base64 encoding.
	Hash string `json:"hash"`
	// The height of the Block in which this Transaction is included. Links the Transaction to its containing Block.
	Block_height int `json:"block_height"`
	// The payload of a message shows the contents of the messages in a transaction.
	// A message consists of `router`, `type`, and `value` (whose form depends on the `router` and `type`).
	Messages []GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage `json:"messages"`
}

// GetHash returns GetPublishedPackagesTransactionsTransaction.Hash, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransaction) GetHash() string { return v.Hash }

// GetBlock_height returns GetPublishedPackagesTransactionsTransaction.Block_height, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransaction) GetBlock_height() int { return v.Block_height }

// GetMessages returns GetPublishedPackagesTransactionsTransaction.Messages, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransaction) GetMessages() []GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage {
	return v.Messages
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage includes the requested fields of the GraphQL type TransactionMessage.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage struct {
	// The type of transaction message.
	// The value of `typeUrl` can be `send`, `exec`, `add_package`, `run`.
	TypeUrl string `json:"typeUrl"`
	// MessageValue is the content of the transaction.
	// `value` can be of type `BankMsgSend`, `MsgCall`, `MsgAddPackage`, `MsgRun`, `UnexpectedMessage`.
	Value GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue `json:"-"`
}

// GetTypeUrl returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.TypeUrl, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) GetTypeUrl() string {
	return v.TypeUrl
}

// GetValue returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.Value, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) GetValue() GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue {
	return v.Value
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage
		Value json.RawMessage `json:"value"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Value
		src := firstPass.Value
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessage struct {
	TypeUrl string `json:"typeUrl"`

	Value json.RawMessage `json:"value"`
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) __premarshalJSON() (*__premarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessage, error) {
	var retval __premarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessage

	retval.TypeUrl = v.TypeUrl
	{

		dst := &retval.Value
		src := v.Value
		var err error
		*dst, err = __marshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
		}
	}
	return &retval, nil
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue includes the requested fields of the GraphQL interface MessageValue.
//
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue is implemented by the following types:
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue interface {
	implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}

func __unmarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(b []byte, v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BankMsgSend":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend)
		return json.Unmarshal(b, *v)
	case "MsgAddPackage":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage)
		return json.Unmarshal(b, *v)
	case "MsgCall":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall)
		return json.Unmarshal(b, *v)
	case "MsgRun":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun)
		return json.Unmarshal(b, *v)
	case "UnexpectedMessage":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MessageValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue: "%v"`, tn.TypeName)
	}
}

func __marshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend:
		typename = "BankMsgSend"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage:
		typename = "MsgAddPackage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall:
		typename = "MsgCall"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun:
		typename = "MsgRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage:
		typename = "UnexpectedMessage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue: "%T"`, v)
	}
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend includes the requested fields of the GraphQL type BankMsgSend.
// The GraphQL type's documentation follows.
//
// `BankMsgSend` is a message with a message router of `bank` and a message type of `send`.
// `BankMsgSend` is the fund transfer tx message.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) GetTypename() string {
	return v.Typename
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage includes the requested fields of the GraphQL type MsgAddPackage.
// The GraphQL type's documentation follows.
//
// `MsgAddPackage` is a message with a message router of `vm` and a message type of `add_package`.
// `MsgAddPackage` is the package deployment tx message.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage struct {
	Typename string `json:"__typename"`
	// the bech32 address of the package deployer.
	// ex) `g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5`
	Creator string `json:"creator"`
	// the amount of funds to be deposited at deployment, if any ("<amount><denomination>").
	// ex) `1000000ugnot`
	Deposit string `json:"deposit"`
	// the package being deployed.
	Package GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage `json:"package"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetTypename() string {
	return v.Typename
}

// GetCreator returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Creator, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetCreator() string {
	return v.Creator
}

// GetDeposit returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Deposit, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetDeposit() string {
	return v.Deposit
}

// GetPackage returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Package, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetPackage() GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage {
	return v.Package
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage includes the requested fields of the GraphQL type MemPackage.
// The GraphQL type's documentation follows.
//
// `MemPackage` is the metadata information tied to package / realm deployment.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage struct {
	// the gno path of the package.
	Path string `json:"path"`
	// the name of the package.
	Name string `json:"name"`
}

// GetPath returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage.Path, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage) GetPath() string {
	return v.Path
}

// GetName returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage.Name, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage) GetName() string {
	return v.Name
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall includes the requested fields of the GraphQL type MsgCall.
// The GraphQL type's documentation follows.
//
// `MsgCall` is a message with a message router of `vm` and a message type of `exec`.
// `MsgCall` is the method invocation tx message.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetTypename() string {
	return v.Typename
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun includes the requested fields of the GraphQL type MsgRun.
// The GraphQL type's documentation follows.
//
// `MsgRun` is a message with a message router of `vm` and a message type of `run`.
// `MsgRun is the execute arbitrary Gno code tx message`.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetTypename() string {
	return v.Typename
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage includes the requested fields of the GraphQL type UnexpectedMessage.
// The GraphQL type's documentation follows.
//
// `UnexpectedMessage` is an Undefined Message, which is a message that decoding failed.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsResponse is returned by GetUserRegistrations on success.
type GetUserRegistrationsResponse struct {
	// Retrieves a list of Transactions that match the given filter criteria. If the
	// result is incomplete due to errors, both partial results and errors are returned.
	Transactions []GetUserRegistrationsTransactionsTransaction `json:"transactions"`
}

// GetTransactions returns GetUserRegistrationsResponse.Transactions, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsResponse) GetTransactions() []GetUserRegistrationsTransactionsTransaction {
	return v.Transactions
}

// GetUserRegistrationsTransactionsTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Defines a transaction within a block, detailing its execution specifics and content.
type GetUserRegistrationsTransactionsTransaction struct {
	// Hash from Transaction content in base64 encoding.
	Hash string `json:"hash"`
	// The height of the Block in which this Transaction is included. Links the Transaction to its containing Block.
	Block_height int `json:"block_height"`
	// The payload of a message shows the contents of the messages in a transaction.
	// A message consists of `router`, `type`, and `value` (whose form depends on the `router` and `type`).
	Messages []GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage `json:"messages"`
}

// GetHash returns GetUserRegistrationsTransactionsTransaction.Hash, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransaction) GetHash() string { return v.Hash }

// GetBlock_height returns GetUserRegistrationsTransactionsTransaction.Block_height, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransaction) GetBlock_height() int { return v.Block_height }

// GetMessages returns GetUserRegistrationsTransactionsTransaction.Messages, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransaction) GetMessages() []GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage {
	return v.Messages
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage includes the requested fields of the GraphQL type TransactionMessage.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage struct {
	// MessageValue is the content of the transaction.
	// `value` can be of type `BankMsgSend`, `MsgCall`, `MsgAddPackage`, `MsgRun`, `UnexpectedMessage`.
	Value GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue `json:"-"`
}

// GetValue returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage.Value, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) GetValue() GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue {
	return v.Value
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage
		Value json.RawMessage `json:"value"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Value
		src := firstPass.Value
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessage struct {
	Value json.RawMessage `json:"value"`
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) __premarshalJSON() (*__premarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessage, error) {
	var retval __premarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessage

	{

		dst := &retval.Value
		src := v.Value
		var err error
		*dst, err = __marshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
		}
	}
	return &retval, nil
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue includes the requested fields of the GraphQL interface MessageValue.
//
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue is implemented by the following types:
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue interface {
	implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}

func __unmarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(b []byte, v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BankMsgSend":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend)
		return json.Unmarshal(b, *v)
	case "MsgAddPackage":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage)
		return json.Unmarshal(b, *v)
	case "MsgCall":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall)
		return json.Unmarshal(b, *v)
	case "MsgRun":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun)
		return json.Unmarshal(b, *v)
	case "UnexpectedMessage":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MessageValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue: "%v"`, tn.TypeName)
	}
}

func __marshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend:
		typename = "BankMsgSend"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage:
		typename = "MsgAddPackage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall:
		typename = "MsgCall"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun:
		typename = "MsgRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage:
		typename = "UnexpectedMessage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue: "%T"`, v)
	}
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend includes the requested fields of the GraphQL type BankMsgSend.
// The GraphQL type's documentation follows.
//
// `BankMsgSend` is a message with a message router of `bank` and a message type of `send`.
// `BankMsgSend` is the fund transfer tx message.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage includes the requested fields of the GraphQL type MsgAddPackage.
// The GraphQL type's documentation follows.
//
// `MsgAddPackage` is a message with a message router of `vm` and a message type of `add_package`.
// `MsgAddPackage` is the package deployment tx message.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall includes the requested fields of the GraphQL type MsgCall.
// The GraphQL type's documentation follows.
//
// `MsgCall` is a message with a message router of `vm` and a message type of `exec`.
// `MsgCall` is the method invocation tx message.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall struct {
	Typename string `json:"__typename"`
	// the bech32 address of the function caller.
	// ex) `g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5`
	Caller string `json:"caller"`
	// the gno package path.
	Pkg_path string `json:"pkg_path"`
	// `args` are the arguments passed to the executed function.
	Args []string `json:"args"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetTypename() string {
	return v.Typename
}

// GetCaller returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Caller, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetCaller() string {
	return v.Caller
}

// GetPkg_path returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Pkg_path, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetPkg_path() string {
	return v.Pkg_path
}

// GetArgs returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Args, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetArgs() []string {
	return v.Args
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun includes the requested fields of the GraphQL type MsgRun.
// The GraphQL type's documentation follows.
//
// `MsgRun` is a message with a message router of `vm` and a message type of `run`.
// `MsgRun is the execute arbitrary Gno code tx message`.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage includes the requested fields of the GraphQL type UnexpectedMessage.
// The GraphQL type's documentation follows.
//
// `UnexpectedMessage` is an Undefined Message, which is a message that decoding failed.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) GetTypename() string {
	return v.Typename
}

// __GetGovDAOExecutedProposalsInput is used internally by genqlient
type __GetGovDAOExecutedProposalsInput struct {
	StartBlock int `json:"StartBlock"`
}

// GetStartBlock returns __GetGovDAOExecutedProposalsInput.StartBlock, and is useful for accessing the field via an interface.
func (v *__GetGovDAOExecutedProposalsInput) GetStartBlock() int { return v.StartBlock }

// __GetGovDAOProposalsInput is used internally by genqlient
type __GetGovDAOProposalsInput struct {
	StartBlock int `json:"StartBlock"`
}

// GetStartBlock returns __GetGovDAOProposalsInput.StartBlock, and is useful for accessing the field via an interface.
func (v *__GetGovDAOProposalsInput) GetStartBlock() int { return v.StartBlock }

// __GetGovDAOProposalsVotesInput is used internally by genqlient
type __GetGovDAOProposalsVotesInput struct {
	StartBlock int `json:"StartBlock"`
}

// GetStartBlock returns __GetGovDAOProposalsVotesInput.StartBlock, and is useful for accessing the field via an interface.
func (v *__GetGovDAOProposalsVotesInput) GetStartBlock() int { return v.StartBlock }

// __GetPublishedPackagesInput is used internally by genqlient
type __GetPublishedPackagesInput struct {
	StartBlock int `json:"StartBlock"`
}

// GetStartBlock returns __GetPublishedPackagesInput.StartBlock, and is useful for accessing the field via an interface.
func (v *__GetPublishedPackagesInput) GetStartBlock() int { return v.StartBlock }

// __GetUserRegistrationsInput is used internally by genqlient
type __GetUserRegistrationsInput struct {
	StartBlock int `json:"StartBlock"`
}

// GetStartBlock returns __GetUserRegistrationsInput.StartBlock, and is useful for accessing the field via an interface.
func (v *__GetUserRegistrationsInput) GetStartBlock() int { return v.StartBlock }

func GetGovDAOExecutedProposals(
	ctx context.Context,
	client graphql.Client,
	StartBlock int,
) (*GetGovDAOExecutedProposalsResponse, error) {
	req := &graphql.Request{
		OpName: "GetGovDAOExecutedProposals",
		Query: `
query GetGovDAOExecutedProposals ($StartBlock: Int!) {
	getTransactions(where: {success:{eq:true},messages:{value:{MsgCall:{func:{eq:"ExecuteProposal"},pkg_path:{eq:"gno.land/r/gov/dao"}}}},_not:{block_height:{lt:$StartBlock}}}, order: {heightAndIndex:ASC}) {
		index
		hash
		success
		block_height
		gas_wanted
		gas_used
		content_raw
		memo
		messages {
			typeUrl
			route
			value {
				__typename
				... on MsgCall {
					caller
					pkg_path
					args
				}
			}
		}
	}
}
`,
		Variables: &__GetGovDAOExecutedProposalsInput{
			StartBlock: StartBlock,
		},
	}
	var err error

	var data GetGovDAOExecutedProposalsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetGovDAOProposals(
	ctx context.Context,
	client graphql.Client,
	StartBlock int,
) (*GetGovDAOProposalsResponse, error) {
	req := &graphql.Request{
		OpName: "GetGovDAOProposals",
		Query: `
query GetGovDAOProposals ($StartBlock: Int!) {
	getTransactions(where: {success:{eq:true},response:{events:{GnoEvent:{type:{eq:"ProposalCreated"},pkg_path:{eq:"gno.land/r/gov/dao"}}}},_not:{block_height:{lt:$StartBlock}}}, order: {heightAndIndex:ASC}) {
		block_height
		index
		response {
			events {
				__typename
				... on GnoEvent {
					type
					attrs {
						key
						value
					}
					pkg_path
				}
			}
			data
		}
		messages {
			typeUrl
			route
			value {
				__typename
				... on MsgRun {
					caller
					send
					package {
						path
						files {
							name
							body
						}
						name
					}
				}
			}
		}
	}
}
`,
		Variables: &__GetGovDAOProposalsInput{
			StartBlock: StartBlock,
		},
	}
	var err error

	var data GetGovDAOProposalsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetGovDAOProposalsVotes(
	ctx context.Context,
	client graphql.Client,
	StartBlock int,
) (*GetGovDAOProposalsVotesResponse, error) {
	req := &graphql.Request{
		OpName: "GetGovDAOProposalsVotes",
		Query: `
query GetGovDAOProposalsVotes ($StartBlock: Int!) {
	getTransactions(where: {success:{eq:true},messages:{value:{MsgCall:{func:{eq:"MustVoteOnProposalSimple"},pkg_path:{eq:"gno.land/r/gov/dao"}}}},_not:{block_height:{lt:$StartBlock}}}, order: {heightAndIndex:ASC}) {
		index
		hash
		success
		block_height
		gas_wanted
		gas_used
		content_raw
		memo
		messages {
			typeUrl
			route
			value {
				__typename
				... on MsgCall {
					caller
					pkg_path
					args
				}
			}
		}
	}
}
`,
		Variables: &__GetGovDAOProposalsVotesInput{
			StartBlock: StartBlock,
		},
	}
	var err error

	var data GetGovDAOProposalsVotesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetPublishedPackages(
	ctx context.Context,
	client graphql.Client,
	StartBlock int,
) (*GetPublishedPackagesResponse, error) {
	req := &graphql.Request{
		OpName: "GetPublishedPackages",
		Query: `
query GetPublishedPackages ($StartBlock: Int!) {
	transactions(filter: {success:true,from_block_height:$StartBlock,message:{type_url:add_package}}) {
		hash
		block_height
		messages {
			typeUrl
			value {
				__typename
				... on MsgAddPackage {
					creator
					deposit
					package {
						path
						name
					}
				}
			}
		}
	}
}
`,
		Variables: &__GetPublishedPackagesInput{
			StartBlock: StartBlock,
		},
	}
	var err error

	var data GetPublishedPackagesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetUserRegistrations(
	ctx context.Context,
	client graphql.Client,
	StartBlock int,
) (*GetUserRegistrationsResponse, error) {
	req := &graphql.Request{
		OpName: "GetUserRegistrations",
		Query: `
query GetUserRegistrations ($StartBlock: Int!) {
	transactions(filter: {success:true,from_block_height:$StartBlock,events:{gno_event:{pkg_path:"gno.land/r/gnoland/users/v1"}}}) {
		hash
		block_height
		messages {
			value {
				__typename
				... on MsgCall {
					caller
					pkg_path
					args
				}
			}
		}
	}
}
`,
		Variables: &__GetUserRegistrationsInput{
			StartBlock: StartBlock,
		},
	}
	var err error

	var data GetUserRegistrationsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
